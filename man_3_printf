.\" Manpage for _printf
.TH _printf 3 "2025-07-16" "1.0" "Custom printf function"
.SH NAME
_printf \- custom implementation of the standard printf function

.SH SYNOPSIS
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The
.B _printf
function produces output according to a format string and a variable number of arguments, similar to the standard C
.B printf
function.

This implementation supports a subset of standard format specifiers:

.TP
.B "%c"
Prints a single character.

.TP
.B "%s"
Prints a string. If the argument is
.B NULL,
prints "(null)".

.TP
.B "%d", "%i"
Prints a signed decimal integer.

.TP
.B "%%"
Prints a literal '%' character.

.TP
.B "Unknown specifiers"
Prints the '%' character followed by the unknown specifier character.

.SH RETURN VALUE
Upon successful completion, _printf returns the number of characters printed. If
.B NULL
is passed as the format string or if the format string ends with a single '%' character, the function returns -1.

.SH ERRORS
If an invalid format specifier is encountered, the function prints the '%' character and the invalid specifier.

.SH EXAMPLES
The following demonstrates typical usage:

.nf
_printf("Character: %c\n", 'A');
_printf("String: %s\n", "Hello, World!");
_printf("Percent sign: %%\n");
_printf("Integer: %d\n", 12345);
_printf("Null string: %s\n", NULL);
.fi

.SH SEE ALSO
printf(3)

.SH AUTHORS
Alba Eftimi <https://github.com/abfabs>
Sokol Gjeka <https://github.com/sokolgj19>
